
from bitarray import bitarray
import sys
import csv
import numpy as np
import time


def BloomFilter(passwords1, passwords2):
        start = time.time()
        c=0 #count for every password2s in passwords1
        
    # add all passwords1 to the filter

        n=len(passwords1)//2  #number of elements to insert in the filter, which is the lenght of passwords1
        p=0.1     #false positive error rate
        m=int(((-1)*n*np.log(p))/(np.log(2)**2))  #size of the filter
        a= int((m*np.log(2))/n)
        fltr= bitarray(m)
        fltr.setall(0)
        for i in range(n):
            try: 
                h1=fibo_hashing(passwords1[i]) % m
                h2=encode_hash(passwords1[i]) % m
                h3=mid_squares_hashing(passwords1[i]) % m
                h4=sha256(passwords1[i]).final_digest() % m 
                fltr[h1]=1
                fltr[h2]=1
                fltr[h3]=1
                fltr[h4]=1
            except ValueError:
                continue
    # check all passwords2 presence in the filter
    
        for k in range(len(passwords2)):
            try:
                a1=fibo_hashing(passwords2[k]) % m
                a2=encode_hash(passwords2[k]) % m
                a3=mid_squares_hashing(passwords2[i]) % m
                a4=sha256(passwords2[i]).final_digest() % m 
                if fltr[a1]==1 and fltr[a2]==1 and fltr[a3]==1 and fltr[a4]==1:
                    c+=1
            except ValueError:
                continue
                
        print(c)
        end = time.time()
     
        print('Number of hash function used: ', a)
        print('Number of duplicates detected: ', c)
        print('Probability of false positives: ', p)
        print('Execution time: ', end-start)
